swagger: '2.0'
info:
  title: ArgentBank API
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '201':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Profile
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/UserProfile'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Access Denied - You cannot access the profile of another user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Access Denied - You cannot update the profile of another user
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add a new transaction
      description: API for adding a new transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Transaction payload
          required: true
          schema:
            type: object
            properties:
              accountId:
                type: string
              amount:
                type: number
              date:
                type: string
                format: date-time
              category:
                type: string
              description:
                type: string
      responses:
        '201':
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions for the current month grouped by account
      description: API for retrieving all transactions for the current month, grouped by account
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: query
          name: month
          description: Month for retrieving transactions (format MM-YYYY)
          required: false
          type: string
        - in: query
          name: groupByAccount
          description: If true, group transactions by account
          required: false
          type: boolean
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsGroupedResponse'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get details of a specific transaction
      description: API to fetch the details of a specific transaction by its ID
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsGroupedResponse'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a transaction
      description: API for updating a transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Updated transaction details
          required: true
          schema:
            type: object
            properties:
              amount:
                type: number
              date:
                type: string
                format: date-time
              category:
                type: string
              description:
                type: string
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'

    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Remove specific fields from a transaction
      description: API to remove specific information from a transaction without deleting it
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Fields to remove from the transaction
          required: true
          schema:
            type: object
            properties:
              removeFields:
                type: array
                items:
                  type: string
                  enum: ["amount", "date", "category", "description"]
      responses:
        '200':
          description: Transaction fields removed successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
  Login:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsGroupedResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      transactions:
        type: array
        items:
          type: object
          properties:
            accountId:
              type: string
            accountName:
              type: string
            transactions:
              type: array
              items:
                type: object
                properties:
                  transactionId:
                    type: string
                  amount:
                    type: number
                  date:
                    type: string
                    format: date-time
                  category:
                    type: string
                  description:
                    type: string
  ErrorResponse:
    type: object
    properties:
      error:
        type: string
        example: "Invalid request"
